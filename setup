#!/bin/bash
umask 022

NEED_PACKAGE="git homebrew/dupes/rsync autossh autojump terminal-notifier"

# 软链接
# 如果目标是文件或文件夹 备份
# 如果目标已经是链接，删除，重新生成链接
_kits_symbolic_link() {
    [[ -L "$2" ]] && rm -f "$2"
    [[ -f "$2" || -d "$2" ]] && mv "$2" "$2-bak" && echo "BACKUP: $2 -> $2-bak"
    ln -s "$1" "$2" 
}

SETUP_DIR=$(cd $(dirname $0); pwd)
# 如果是链接 获取真实路径
[[ -L "$SETUP_DIR" ]] && SETUP_DIR=$(readlink $SETUP_DIR)
_kits_symbolic_link $SETUP_DIR ~/.kits

KITS_CONFIG_PATH=~/.kits_path
echo "export KITS=~/.kits" > $KITS_CONFIG_PATH
. $KITS_CONFIG_PATH

# profile处理
_kits_symbolic_link $KITS/dotfiles/bash_profile.sh ~/.bash_profile
_kits_symbolic_link $KITS/dotfiles/bashrc.sh ~/.bashrc
_kits_symbolic_link $KITS/shell/task.sh ~/.kits_task

# 一些配置文件
_kits_symbolic_link $KITS/dotfiles/pylintrc ~/.pylintrc

# sublime text
_kits_symbolic_link "/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl" $KITS/bin/subl

# 安装
if [[ ! -z "$(which brew)" ]]; then
    for p in  $NEED_PACKAGE; do
        brew install $p
    done
else
    echo "brew was not properly installed."
fi

# 下列需要root权限
# if [[ "$(whoami)" = "root" ]]; then
#     _kits_symbolic_link $KITS/dotfiles/hosts /etc/hosts
# fi

# 重新载入使其生效 
[[ -n "$SHELL" ]] && exec $SHELL

echo "Kits installed."
